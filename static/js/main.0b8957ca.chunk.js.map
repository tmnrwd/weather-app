{"version":3,"sources":["WeatherCard.js","App.js","serviceWorker.js","index.js"],"names":["days","WeatherCard","props","state","dayOne","day","date","Date","now","location","summary","temp","minTemp","maxTemp","windSpeed","cardID","error","dayTwo","dayThree","dayFour","dayFive","setDay","bind","response","status","Promise","resolve","reject","Error","statusText","prevState","this","setState","fetch","then","res","json","result","dateCalc","list","dt_txt","getDay","dateCalcTwo","dateCalcThree","dateCalcFour","dateCalcFive","dateNoTimeOneResult","toDateString","dateNoTimeTwoResult","dateNoTimeThreeResult","dateNoTimeFourResult","dateNoTimeFiveResult","weather","main","temp_min","temp_max","wind","speed","Container","fluid","className","Row","Col","Card","style","width","Body","Title","React","Component","App","cards","Array","fill","map","_","i","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0b8957ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nimport './App.css';\r\n\r\nlet days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n\r\nclass WeatherCard extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dayOne: {\r\n                day: \"flurbsday\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Rain\",\r\n                temp: 0,\r\n                minTemp: 12,\r\n                maxTemp: 18,\r\n                windSpeed: 9,\r\n                cardID: 0,\r\n                error: null\r\n            },\r\n            dayTwo: {\r\n                day: \"flurbsday\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Sunshine\",\r\n                temp: 0,\r\n                minTemp: 12,\r\n                maxTemp: 18,\r\n                windSpeed: 9,\r\n                cardID: 1,\r\n                error: null\r\n            },\r\n            dayThree: {\r\n                day: \"flurbsday\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Pie\",\r\n                temp: 0,\r\n                minTemp: 12,\r\n                maxTemp: 18,\r\n                windSpeed: 9,\r\n                cardID: 2,\r\n                error: null\r\n            },\r\n            dayFour: {\r\n                day: \"flurbsday\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Sausages\",\r\n                temp: 0,\r\n                minTemp: 12,\r\n                maxTemp: 18,\r\n                windSpeed: 9,\r\n                cardID: 2,\r\n                error: null\r\n            },\r\n            dayFive: {\r\n                day: \"flurbsday\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Meow\",\r\n                temp: 0,\r\n                minTemp: 12,\r\n                maxTemp: 18,\r\n                windSpeed: 9,\r\n                cardID: 2,\r\n                error: null\r\n            }\r\n        }\r\n        this.setDay = this.setDay.bind(this)\r\n    }\r\n\r\n    status(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return Promise.resolve(response)\r\n        } else {\r\n            return Promise.reject(new Error(response.statusText))\r\n        }\r\n\r\n    }\r\n\r\n    setDay(prevState) {\r\n        this.setState(prevState => ({\r\n            dayOne: {\r\n                ...prevState.dayOne,\r\n                day: \"Monday\"\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            dayOne: {\r\n                day: \"Loading...\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Rain\",\r\n                minTemp: 0,\r\n                maxTemp: 0,\r\n                windSpeed: 0,\r\n                cardID: 0,\r\n                error: null\r\n            },\r\n            dayTwo: {\r\n                day: \"Loading...\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Rain\",\r\n                minTemp: 0,\r\n                maxTemp: 0,\r\n                windSpeed: 0,\r\n                cardID: 0,\r\n                error: null\r\n            },\r\n            dayThree: {\r\n                day: \"Loading...\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Rain\",\r\n                minTemp: 0,\r\n                maxTemp: 0,\r\n                windSpeed: 0,\r\n                cardID: 0,\r\n                error: null\r\n            },\r\n            dayFour: {\r\n                day: \"Loading...\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Rain\",\r\n                minTemp: 0,\r\n                maxTemp: 0,\r\n                windSpeed: 0,\r\n                cardID: 0,\r\n                error: null\r\n            },\r\n            dayFive: {\r\n                day: \"Loading...\",\r\n                date: Date.now(),\r\n                location: \"Sheffield, UK\",\r\n                summary: \"Rain\",\r\n                minTemp: 0,\r\n                maxTemp: 0,\r\n                windSpeed: 0,\r\n                cardID: 0,\r\n                error: null\r\n            }\r\n        })\r\n\r\n        // https://api.openweathermap.org/data/2.5/forecast?id=2638077&appid=bbfd9b5ddd0e169121aa37421a01f230\r\n        // https://api.quotable.io/random\r\n        fetch(\"https://api.openweathermap.org/data/2.5/forecast?id=2638077&units=metric&appid=bbfd9b5ddd0e169121aa37421a01f230\")\r\n            .then(this.status)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let dateCalc = new Date(result.list[0].dt_txt)\r\n                    let dayOne = days[dateCalc.getDay()]\r\n                    let dateCalcTwo = new Date(result.list[8].dt_txt)\r\n                    let dayTwo = days[dateCalcTwo.getDay()]\r\n                    let dateCalcThree = new Date(result.list[16].dt_txt)\r\n                    let dayThree = days[dateCalcThree.getDay()]\r\n                    let dateCalcFour = new Date(result.list[24].dt_txt)\r\n                    let dayFour = days[dateCalcFour.getDay()]\r\n                    let dateCalcFive = new Date(result.list[32].dt_txt)\r\n                    let dayFive = days[dateCalcFive.getDay()]\r\n\r\n                    let dateNoTimeOne = new Date(result.list[0].dt_txt)\r\n                    let dateNoTimeOneResult = dateNoTimeOne.toDateString()\r\n                    let dateNoTimeTwo = new Date(result.list[8].dt_txt)\r\n                    let dateNoTimeTwoResult = dateNoTimeTwo.toDateString()\r\n                    let dateNoTimeThree = new Date(result.list[16].dt_txt)\r\n                    let dateNoTimeThreeResult = dateNoTimeThree.toDateString()\r\n                    let dateNoTimeFour = new Date(result.list[24].dt_txt)\r\n                    let dateNoTimeFourResult = dateNoTimeFour.toDateString()\r\n                    let dateNoTimeFive = new Date(result.list[32].dt_txt)\r\n                    let dateNoTimeFiveResult = dateNoTimeFive.toDateString()\r\n\r\n                    this.setState(prevState => ({\r\n                        dayOne: {\r\n                            ...prevState.dayOne,\r\n                            day: dayOne,\r\n                            date: dateNoTimeOneResult,\r\n                            location: \"Sheffield, UK\",\r\n                            summary: result.list[0].weather.main,\r\n                            temp: result.list[0].main.temp,\r\n                            minTemp: result.list[0].main.temp_min,\r\n                            maxTemp: result.list[0].main.temp_max,\r\n                            windSpeed: result.list[0].wind.speed,\r\n                            cardID: 0,\r\n                            error: null\r\n                        },\r\n                        dayTwo: {\r\n                            ...prevState.dayTwo,\r\n                            day: dayTwo,\r\n                            date: dateNoTimeTwoResult,\r\n                            location: \"Sheffield, UK\",\r\n                            summary: result.list[8].weather.main,\r\n                            temp: result.list[8].main.temp,\r\n                            minTemp: result.list[8].main.temp_min,\r\n                            maxTemp: result.list[8].main.temp_max,\r\n                            windSpeed: result.list[8].wind.speed,\r\n                            cardID: 1,\r\n                            error: null\r\n                        },\r\n                        dayThree: {\r\n                            ...prevState.dayThree,\r\n                            day: dayThree,\r\n                            date: dateNoTimeThreeResult,\r\n                            location: \"Sheffield, UK\",\r\n                            summary: result.list[16].weather.main,\r\n                            temp: result.list[16].main.temp,\r\n                            minTemp: result.list[16].main.temp_min,\r\n                            maxTemp: result.list[16].main.temp_max,\r\n                            windSpeed: result.list[16].wind.speed,\r\n                            cardID: 2,\r\n                            error: null\r\n                        },\r\n                        dayFour: {\r\n                            ...prevState.dayFour,\r\n                            day: dayFour,\r\n                            date: dateNoTimeFourResult,\r\n                            location: \"Sheffield, UK\",\r\n                            summary: result.list[24].weather.main,\r\n                            temp: result.list[24].main.temp,\r\n                            minTemp: result.list[24].main.temp_min,\r\n                            maxTemp: result.list[24].main.temp_max,\r\n                            windSpeed: result.list[24].wind.speed,\r\n                            cardID: 3,\r\n                            error: null\r\n                        },\r\n                        dayFive: {\r\n                            ...prevState.dayFive,\r\n                            day: dayFive,\r\n                            date: dateNoTimeFiveResult,\r\n                            location: \"Sheffield, UK\",\r\n                            summary: result.list[32].weather.main,\r\n                            temp: result.list[32].main.temp,\r\n                            minTemp: result.list[32].main.temp_min,\r\n                            maxTemp: result.list[32].main.temp_max,\r\n                            windSpeed: result.list[32].wind.speed,\r\n                            cardID: 4,\r\n                            error: null\r\n                        }\r\n                    }));\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Container fluid className=\"text-center\">\r\n            <h1>Weather App</h1>\r\n            <br></br>\r\n            </Container>\r\n            \r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title><h1>{this.state.dayOne.temp} °C</h1></Card.Title>\r\n                                    <p>{this.state.dayOne.date}</p>\r\n                                    <p>{this.state.dayOne.location}</p>\r\n                                    <p>{this.state.dayOne.summary}</p>\r\n                                    <p>{this.state.dayOne.minTemp} - {this.state.dayOne.maxTemp} °C</p>\r\n                                    <p>Wind Speed: {this.state.dayOne.windSpeed} m/s</p>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title><h1>{this.state.dayTwo.temp} °C</h1></Card.Title>\r\n                                    <p>{this.state.dayTwo.date}</p>\r\n                                    <p>{this.state.dayTwo.location}</p>\r\n                                    <p>{this.state.dayTwo.summary}</p>\r\n                                    <p>{this.state.dayTwo.minTemp} - {this.state.dayTwo.maxTemp} °C</p>\r\n                                    <p>Wind Speed: {this.state.dayTwo.windSpeed} m/s</p>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title><h1>{this.state.dayThree.temp} °C</h1></Card.Title>\r\n                                    <p>{this.state.dayThree.date}</p>\r\n                                    <p>{this.state.dayThree.location}</p>\r\n                                    <p>{this.state.dayThree.summary}</p>\r\n                                    <p>{this.state.dayThree.minTemp} - {this.state.dayThree.maxTemp} °C</p>\r\n                                    <p>Wind Speed: {this.state.dayThree.windSpeed} m/s</p>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title><h1>{this.state.dayFour.temp} °C</h1></Card.Title>\r\n                                    <p>{this.state.dayFour.date}</p>\r\n                                    <p>{this.state.dayFour.location}</p>\r\n                                    <p>{this.state.dayFour.summary}</p>\r\n                                    <p>{this.state.dayFour.minTemp} - {this.state.dayFour.maxTemp} °C</p>\r\n                                    <p>Wind Speed: {this.state.dayFour.windSpeed} m/s</p>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title><h1>{this.state.dayFive.temp} °C</h1></Card.Title>\r\n                                    <p>{this.state.dayFive.date}</p>\r\n                                    <p>{this.state.dayFive.location}</p>\r\n                                    <p>{this.state.dayFive.summary}</p>\r\n                                    <p>{this.state.dayFive.minTemp} - {this.state.dayFive.maxTemp} °C</p>\r\n                                    <p>Wind Speed: {this.state.dayFive.windSpeed} m/s</p>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default WeatherCard;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport WeatherCard from './WeatherCard'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        cards: []\n    }\n    this.cards = new Array(1).fill().map((_, i) => {\n      return (\n        <WeatherCard cardID={(i+1)} key={i}/>\n      )\n    })\n  }\n\nrender() {\n  return (\n    <>\n    {this.cards}\n    </>\n    );\n    \n}\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}